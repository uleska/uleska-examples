# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs: 
  # This is the sample initial code build job
  code_build:
    docker:
      - image: circleci/python:3.7

    steps:
      # Step: Pretend to build something
      - run:
          name: building something
          command: |
            echo "Building something..."
  code_test:
    docker:
      - image: circleci/python:3.7
    steps:
      # Step:: Now that code has successfully built, run SAST and SCA security tests
      - run:
          name: run Uleska SAST & SCA testing
          command: |
            python3 -m pip install requests uleska-automate
            uleska-automate --uleska_host https://uleska-live-one.uleska.com/ --application_name '<<app name>>' --version_name <<version name>> --token '<<auth token>>' --test_and_compare --fail_if_issue_risk_over 2000000


  # This is the sample container build job
  container_build:
    docker:
      - image: circleci/python:3.7

    steps:
      # Step: Pretend to build something
      - run:
          name: building some containers
          command: |
            echo "Building some containers..."
  container_test:
    docker:
      - image: circleci/python:3.7
    steps:
      # Step:: Now that container is built, run Container security tests
      - run:
          name: run Uleska Container testing
          command: |
            python3 -m pip install requests uleska-automate
            uleska-automate --uleska_host https://uleska-live-one.uleska.com/ --application_name '<<app name>>' --version_name <<version name>> --token '<<auth token>>' --test_and_compare --fail_if_issue_risk_over 2000000

# This is the sample deployment job
  staging:
    docker:
      - image: circleci/python:3.7

    steps:
      # Step: Pretend to deploy something
      - run:
          name: deploying something
          command: |
            echo "Deploying something..."
  staging_test:
    docker:
      - image: circleci/python:3.7
    steps:
      # Step:: Now that container is built, run Container security tests
      - run:
          name: run Uleska DAST and Cloud testing
          command: |
            python3 -m pip install requests uleska-automate
            uleska-automate --uleska_host https://uleska-live-one.uleska.com/ --application_name '<<app name>>' --version_name <<version name>> --token '<<auth token>>' --test_and_results --fail_if_issue_risk_over 2000000



workflows:
  code_build_and_test:
    jobs:
      - code_build
      - code_test:
          requires:
            - code_build
      - container_build:
          requires: 
            - code_test
      - container_test:
          requires:
            - container_build
      - staging:
          requires:
            - container_test
      - staging_test:
          requires:
            - staging
